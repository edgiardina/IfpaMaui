<?xml version="1.0" encoding="utf-8"?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:calendar="clr-namespace:Plugin.Maui.Calendar.Controls;assembly=Plugin.Maui.Calendar"
             xmlns:controls="clr-namespace:Ifpa.Controls"
             x:Class="Ifpa.Views.CalendarPage"
             xmlns:mi="http://www.aathifmahir.com/dotnet/2022/maui/icons"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:maps="http://schemas.microsoft.com/dotnet/2021/maui/maps"
             xmlns:views="clr-namespace:Ifpa.Views"
             xmlns:local="clr-namespace:Ifpa"
             xmlns:vm="clr-namespace:Ifpa.ViewModels"
             xmlns:models="clr-namespace:Ifpa.Models"
             xmlns:ifpacalendar="clr-namespace:PinballApi.Models.WPPR.v1.Calendar;assembly=PinballApi"
             xmlns:ifpatournamentsearch="clr-namespace:PinballApi.Models.WPPR.Universal.Tournaments.Search;assembly=PinballApi"
             x:DataType="vm:CalendarViewModel"
             Title="{x:Static local:Strings.CalendarPage_Calendar}">
    <ContentPage.Resources>
        <ResourceDictionary>
            <toolkit:IsEqualConverter x:Key="IsEqualConverter" />
            <toolkit:InvertedBoolConverter x:Key="invertedBoolConverter" />
            <DataTemplate x:Key="PinDataTemplate"
                          x:Name="PinDataTemplate">
                <maps:Pin MarkerClicked="Pin_MarkerClicked"
                          x:DataType="maps:Pin"
                          InfoWindowClicked="Pin_InfoWindowClicked"
                          MarkerId="{Binding MarkerId}"
                          Location="{Binding Location}"
                          Address="{Binding Address}"
                          Label="{Binding Label}" />
            </DataTemplate>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.ToolbarItems>
        <ToolbarItem Text="{x:Static local:Strings.CalendarPage_MyLocation}"
                     Clicked="MyLocation_Clicked"
                     IconImageSource="{mi:Fluent Icon=Location48, IconColor={StaticResource IconAccentColor}}" />
        <ToolbarItem Text="{x:Static local:Strings.CalendarPage_ToggleView}"
                     Command="{Binding ChangeCalendarDisplayCommand}"
                     Clicked="ToggleView_Clicked"
                     IconImageSource="{mi:Fluent Icon=CalendarLtr28, IconColor={StaticResource IconAccentColor}}">
        </ToolbarItem>
    </ContentPage.ToolbarItems>

    <Grid>
        <Grid x:Name="MapLayout"
              IsVisible="{Binding CurrentType, Converter={StaticResource IsEqualConverter}, ConverterParameter={x:Static vm:CalendarType.MapAndList}}"
              RowDefinitions="*,*"
              RowSpacing="5">
            <Grid Grid.Row="0"
                  x:Name="mapShim">
                <!--
                    We load the map from the code behind because there's not a good way to pass the dynamic first location to the constrcutor otherwise
                    https://github.com/edgiardina/IfpaMaui/issues/97
                -->
            </Grid>
            <CollectionView x:Name="TournamentListView"
                            Grid.Row="1"
                            IsVisible="{Binding IsBusy, Converter={StaticResource invertedBoolConverter}}"
                            ItemsSource="{Binding Tournaments}"
                            SelectionMode="Single"
                            SelectionChanged="TournamentListView_SelectionChanged">
                <CollectionView.ItemTemplate>
                    <DataTemplate x:DataType="ifpatournamentsearch:Tournament">
                        <VerticalStackLayout>
                            <Grid ColumnDefinitions="2*,*,*"
                                  RowDefinitions="*,*"
                                  Margin="10,5">
                                <Label Text="{Binding TournamentName}"
                                       Grid.ColumnSpan="3"
                                       FontAttributes="Bold" />

                                <Label FontSize="Small"
                                       Grid.Row="1"
                                       VerticalTextAlignment="Center"
                                       TextColor="{AppThemeBinding Light={StaticResource SecondaryTextColor}, Dark={StaticResource SecondaryTextColor}}"
                                       LineBreakMode="WordWrap">
                                    <Label.FormattedText>
                                        <FormattedString>
                                            <Span Text="{Binding City}" />
                                            <Span Text=", " />
                                            <Span Text="{Binding Stateprov}" />
                                        </FormattedString>
                                    </Label.FormattedText>
                                </Label>

                                <Label Grid.Column="1"
                                       Grid.Row="1"
                                       MinimumWidthRequest="90"
                                       FontSize="Small"
                                       VerticalTextAlignment="Center"
                                       HorizontalTextAlignment="Center"
                                       TextColor="{DynamicResource SecondaryTextColor}"
                                       Text="{Binding EventStartDate, StringFormat='{0:d}'}"
                                       LineBreakMode="NoWrap" />

                                <controls:Chip Text="{Binding RankingSystem}"
                                               Grid.Column="2"
                                               Grid.Row="1"
                                               FontSize="10"
                                               HorizontalOptions="End" />
                            </Grid>
                            <BoxView Style="{StaticResource BoxSeperator}" />
                        </VerticalStackLayout>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
            <ActivityIndicator Grid.Row="2"
                               IsVisible="{Binding IsBusy}"
                               IsRunning="{Binding IsBusy}" />
        </Grid>
        <calendar:Calendar x:Name="myCal"
                           SelectedDate="{Binding Source={x:Static sys:DateTime.Now}}"
                           ArrowsSymbolNext="&gt;"
                           ArrowsSymbolPrev="&lt;"
                           ArrowsFontSize="20"
                           ArrowsFontAttribute="Bold"
                           ArrowsBackgroundColor="{AppThemeBinding Light={StaticResource SecondaryBackgroundColor}, Dark={StaticResource SecondaryBackgroundColorDark}}"
                           ArrowsBorderColor="Transparent"
                           ArrowsColor="{StaticResource IconAccentColor}"
                           Events="{Binding TournamentCalenderItems}"
                           IsVisible="{Binding CurrentType, Converter={StaticResource IsEqualConverter}, ConverterParameter={x:Static vm:CalendarType.Calendar}}"
                           ShownDate="{Binding Source={x:Static sys:DateTime.Now}}"
                           ShowYearPicker="False"
                           TodayOutlineColor="{StaticResource IconAccentColor}"
                           EventIndicatorColor="{StaticResource IconAccentColor}"
                           SelectedDayBackgroundColor="{StaticResource IconAccentColor}"
                           EventIndicatorSelectedColor="{StaticResource IconAccentColor}"
                           MonthLabelColor="{AppThemeBinding Light={StaticResource PrimaryTextColor}, Dark={StaticResource PrimaryTextColorDark}}"
                           SelectedDateColor="White"
                           DisabledDayColor="{AppThemeBinding Light={StaticResource SecondaryTextColor}, Dark={StaticResource SecondaryTextColor}}"
                           DeselectedDayTextColor="{AppThemeBinding Light={StaticResource PrimaryTextColor}, Dark={StaticResource PrimaryTextColorDark}}"
                           DaysTitleWeekendColor="{AppThemeBinding Light={StaticResource PrimaryTextColor}, Dark={StaticResource PrimaryTextColorDark}}"
                           DaysTitleColor="{AppThemeBinding Light={StaticResource PrimaryTextColor}, Dark={StaticResource PrimaryTextColorDark}}"
                           EventIndicatorSelectedTextColor="White"
                           OtherMonthDayColor="{AppThemeBinding Light={StaticResource SecondaryTextColor}, Dark={StaticResource SecondaryTextColor}}"
                           EventsScrollViewVisible="True"
                           FooterSectionVisible="False"
                           EventIndicatorTextColor="{AppThemeBinding Light={StaticResource PrimaryTextColor}, Dark={StaticResource PrimaryTextColorDark}}"
                           SelectedDayTextColor="White">
            <calendar:Calendar.EventTemplate>
                <DataTemplate x:DataType="models:TournamentWithDistance">
                    <VerticalStackLayout>
                        <VerticalStackLayout.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding Path=BindingContext.ViewCalendarDetailsCommand, Source={RelativeSource AncestorType={x:Type views:CalendarPage}}}"
                                                  CommandParameter="{Binding TournamentId}" />
                        </VerticalStackLayout.GestureRecognizers>

                        <Grid ColumnDefinitions="2*,*,*"
                              RowDefinitions="*,*"
                              Margin="10,5">
                            <Label Text="{Binding TournamentName}"
                                   Grid.ColumnSpan="3"
                                   FontAttributes="Bold" />

                            <Label FontSize="Small"
                                   Grid.Row="1"
                                   TextColor="{AppThemeBinding Light={StaticResource SecondaryTextColor}, Dark={StaticResource SecondaryTextColor}}"
                                   LineBreakMode="WordWrap">
                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span Text="{Binding City}" />
                                        <Span Text=", " />
                                        <Span Text="{Binding Stateprov}" />
                                    </FormattedString>
                                </Label.FormattedText>
                            </Label>

                            <Label FontSize="Small"
                                   Grid.Column="1"
                                   Grid.Row="1"
                                   HorizontalTextAlignment="Center"
                                   TextColor="{AppThemeBinding Light={StaticResource SecondaryTextColor}, Dark={StaticResource SecondaryTextColor}}"
                                   LineBreakMode="WordWrap">
                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span Text="{Binding Distance}" />
                                        <Span Text=" " />
                                        <Span Text="{x:Static local:Strings.Miles_Abbreviation}" />
                                    </FormattedString>
                                </Label.FormattedText>
                            </Label>

                            <controls:Chip Grid.Row="1"
                                           Text="{Binding RankingSystem}"
                                           Grid.Column="2"
                                           HorizontalOptions="End"
                                           FontSize="10" />

                        </Grid>
                        <BoxView Style="{StaticResource BoxSeperator}" />
                    </VerticalStackLayout>
                </DataTemplate>
            </calendar:Calendar.EventTemplate>
            <calendar:Calendar.EmptyTemplate>
                <DataTemplate>
                    <StackLayout>
                        <Label Text="{x:Static local:Strings.CalendarPage_CalendarEmptyText}"
                               HorizontalTextAlignment="Center"
                               Margin="0,5,0,5" />
                    </StackLayout>
                </DataTemplate>
            </calendar:Calendar.EmptyTemplate>
        </calendar:Calendar>
    </Grid>
</ContentPage>